<CascadingValue Value="formAction">
    @*@for(int rowId = 1; rowId <= FormDesignerViewModel.GetRowsCount(); rowId++)
    {
        <div class="mud-grid mud-grid-spacing-xs-3 mud-grid-justify-xs-flex-start align-end">
            <Virtualize Items="FormDesignerViewModel.GetFormComponentsByRow(rowId)" Context="formComponent">
                <MudItem xs="@formComponent.Xs">
                    <DynamicComponent Type="@formComponent.ComponentType" Parameters="@formComponent.Parameters"></DynamicComponent>
                </MudItem>
            </Virtualize>
        </div>
    }*@

    @if(!FormLayoutViewModel.CheckState(FormState.Busy))
    {
        @for(int rowId = 1; rowId <= FormLayoutViewModel.RowsCount; rowId++)
        {
            <div class="mud-grid mud-grid-spacing-xs-3 mud-grid-justify-xs-flex-start">
                <Virtualize Items="FormLayoutViewModel.GetFormComponentsByRow(rowId)" Context="formComponent">
                    @*Class="@($"{GetPositionClass(formComponent.Position)}")"*@
                    <MudItem xs="@formComponent.Xs">
                        @if(formComponent.TypeName != null)
                        {
                            <div class="mud-badge-root mud-width-full">
                                <DynamicComponent Type="@formComponent.ComponentType" Parameters="@FormLayoutViewModel.GetComponentParameters(formComponent.Parameters)"></DynamicComponent>
                            </div>
                        }
                    </MudItem>
                </Virtualize>
            </div>
        }
    }
</CascadingValue>